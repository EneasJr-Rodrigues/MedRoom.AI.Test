version: 2.1
jobs:
  build_test:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout # checkout source code to working directory
      - run:
          name: Build_Test With artifacts
          command: | # create whl and use pipenv to install dependencies
            pip config list -v
            pip install --upgrade pip
            pip install --upgrade twine

            python3 setup.py bdist_wheel
            sudo add-apt-repository universe -y
            sudo apt-get update
            sudo apt install -y python3-pip
            sudo pip install pipenv
            pipenv install dist/MedRoom.AI.Test-0.0.4-py3-none-any.whl
            pipenv install pytest
      - run:
          command: | # Run test suite
            pipenv run pytest
  test_pypi_publish:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout # checkout source code to working directory
      - run:
          name: Build_Test 2 With artifacts
          command: | # create whl, install twine and publish to Test PyPI
            pip config list -v
            pip install --upgrade pip
            pip install --upgrade twine

            python3 setup.py bdist_wheel
            sudo add-apt-repository universe -y
            sudo apt-get update
            sudo apt install -y python3-pip
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload --repository testpypi dist/*
  pypi_publish:
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout # checkout source code to working directory
      - run:
          name: Publishing artifacts
          command: | # create whl, install twine and publish to PyPI
            pip config list -v
            pip install --upgrade pip
            pip install --upgrade twine

            python3 setup.py bdist_wheel
            sudo add-apt-repository universe -y
            sudo apt-get update
            sudo apt install -y python3-pip
            sudo pip install pipenv
            pipenv install twine
            pipenv run twine upload dist/*
workflows:
  build_test_publish:
    jobs:
      - build_test
      - test_pypi_publish:
          requires:
            - build_test
          filters:
            branches:
              only:
                - develop
      - pypi_publish:
          requires:
            - build_test
          filters:
            branches:
              only:
                - develop